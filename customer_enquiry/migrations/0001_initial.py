# Generated by Django 5.2.5 on 2025-08-06 10:51

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('form_number', models.CharField(help_text='Auto-generated form number', max_length=20, unique=True)),
                ('form_date', models.DateField(default=django.utils.timezone.now)),
                ('first_name', models.CharField(max_length=100)),
                ('middle_name', models.CharField(blank=True, max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254, validators=[django.core.validators.EmailValidator()])),
                ('date_of_birth', models.DateField()),
                ('residential_address', models.TextField()),
                ('city', models.CharField(max_length=100)),
                ('locality', models.CharField(max_length=100)),
                ('pincode', models.CharField(max_length=6, validators=[django.core.validators.RegexValidator(message='Pincode must be 6 digits', regex='^\\d{6}$')])),
                ('nationality', models.CharField(choices=[('indian', 'Indian'), ('nri', 'NRI'), ('pio', 'PIO'), ('oci', 'OCI')], max_length=10)),
                ('employment_type', models.CharField(choices=[('salaried', 'Salaried'), ('business', 'Business'), ('professional', 'Professional'), ('retired', 'Retired'), ('homemaker', 'Homemaker')], max_length=15)),
                ('company_name', models.CharField(blank=True, max_length=200)),
                ('designation', models.CharField(blank=True, max_length=100)),
                ('industry', models.CharField(blank=True, max_length=100)),
                ('configuration', models.CharField(choices=[('2bhk', '2 BHK'), ('3bhk', '3 BHK'), ('4bhk', '4 BHK')], max_length=10)),
                ('budget', models.CharField(choices=[('3.5-4.00cr', '3.5 - 4.00 Cr.'), ('4.5-5.00cr', '4.5 - 5.00 Cr.'), ('6.00-7.00cr', '6.00 - 7.00 Cr.')], max_length=15)),
                ('construction_status', models.CharField(choices=[('under_construction', 'Under Construction (>1 yr)'), ('near_completion', 'Near Completion (<1 yr)'), ('ready_possession', 'Ready Possession')], max_length=20)),
                ('purpose_of_buying', models.CharField(choices=[('personal_use', 'Personal Use'), ('investment', 'Investment'), ('second_home', 'Second Home'), ('gift', 'Gift')], max_length=15)),
                ('source_details', models.TextField(blank=True, help_text='Additional details for Newspaper Ad, Social Media, Exhibition, or Property Portal')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Customer',
                'verbose_name_plural': 'Customers',
                'db_table': 'customers',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ChannelPartner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=200)),
                ('partner_name', models.CharField(max_length=100)),
                ('mobile_number', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator(message='Mobile number must be 10 digits', regex='^\\d{10}$')])),
                ('rera_number', models.CharField(help_text='Real Estate Regulatory Authority Number', max_length=50)),
                ('customer', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='channel_partner', to='customer_enquiry.customer')),
            ],
            options={
                'verbose_name': 'Channel Partner',
                'verbose_name_plural': 'Channel Partners',
                'db_table': 'channel_partners',
            },
        ),
        migrations.CreateModel(
            name='Referral',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('referral_name', models.CharField(max_length=100)),
                ('project_name', models.CharField(max_length=100)),
                ('customer', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='referral', to='customer_enquiry.customer')),
            ],
            options={
                'verbose_name': 'Referral',
                'verbose_name_plural': 'Referrals',
                'db_table': 'referrals',
            },
        ),
        migrations.CreateModel(
            name='CustomerSource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source_type', models.CharField(choices=[('channel_partner', 'Channel Partner'), ('referral', 'Referral'), ('whatsapp', 'WhatsApp'), ('social_media', 'Social Media (Facebook, Google, etc.)'), ('website', 'Website'), ('passing_by', 'Passing by'), ('property_portal', 'Property Search Portal'), ('hoarding', 'Hoarding'), ('newspaper_ad', 'Newspaper Ad'), ('exhibition', 'Exhibition')], max_length=20)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sources', to='customer_enquiry.customer')),
            ],
            options={
                'verbose_name': 'Customer Source',
                'verbose_name_plural': 'Customer Sources',
                'db_table': 'customer_sources',
                'unique_together': {('customer', 'source_type')},
            },
        ),
    ]
